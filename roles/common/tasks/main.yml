---

- name: Upgrade all apt packages
  become: yes
  apt: update_cache=yes upgrade=dist
  ignore_errors: yes

- name: Install commom packages
  become: yes
  apt:
    name: ['default-jdk', 'unrar', 'vim', 'unzip', 'flameshot', 'telegram-desktop', 'dkms', 'terminator',
    'powertop', 'tlp', 'build-essential', 'htop', 'p7zip', 'jq', 'python3-pip', 'apt-transport-https',
    'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common']

- name: Install kvm/libvirt
  become: yes
  apt:
    name: ['qemu', 'qemu-kvm', 'libvirt-daemon-system', 'libvirt-clients', 'bridge-utils']

- name: Install vagrant & libvirt provider
  become: yes
  apt:
    name: ['vagrant', 'vagrant-libvirt', 'ebtables', 'dnsmasq-base', 'libvirt-dev', 'zlib1g-dev', 'ruby-dev',
    'libxml2-dev', 'libxslt-dev']

- name: Install skype for linux
  become: yes
  apt:
    deb: "https://repo.skype.com/latest/skypeforlinux-64.deb"
  ignore_errors: yes

- name: Install Google Chrome
  become: yes
  apt:
    deb: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"

#################################
#Visual Studio Code installation#
#################################

- name: Install Visual Studio Code
  become: yes
  apt:
    deb: "https://go.microsoft.com/fwlink/?LinkID=760868"
    
#################################
########Kodi installation########
#################################

- name: Install kodi dependencies
  become: yes
  apt:
    name: software-properties-common

- name: Configure kodi repository
  become: yes
  apt_repository: repo="ppa:team-xbmc/ppa" state=present

- name: Install kodi
  become: yes
  apt:
    name: kodi
    update_cache: yes

#################################
####Virtualbox installation######
#################################

- name: Configure Oracle key
  become: yes
  apt_key: url={{ item }}
          state=present
  with_items:
  - "https://www.virtualbox.org/download/oracle_vbox.asc"
  - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"

- name: Configure VirtualBox repositories
  become: yes
  apt_repository: repo="deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib"
                state=present

- name: Install VirtualBox
  become: yes
  apt: pkg=virtualbox-{{ virtualbox_version[:3] }} state=present update_cache=yes

- name: Download Virtualbox Extension Pack
  get_url:
    url: https://download.virtualbox.org/virtualbox/{{ virtualbox_version }}/Oracle_VM_VirtualBox_Extension_Pack-{{ virtualbox_version }}.vbox-extpack
    dest: "{{ ansible_user_dir }}"

- name: Install VirtualBox Extension Pack
  shell: "echo y | VBoxManage extpack install --replace {{ ansible_user_dir }}/Oracle_VM_VirtualBox_Extension_Pack-{{ virtualbox_version }}.vbox-extpack"
  become: true

- name: Remove VirtualBox temporary files
  shell: "VBoxManage extpack cleanup"
  become: true

#################################
#######AWS Cli installation######
#################################

- name: Download AWS Cli
  unarchive:
    src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
    dest: /tmp
    remote_src: yes
  become: true

- name: Install AWS Cli
  shell: "/tmp/aws/install --update"
  become: true

#################################
#####Terraform installation######
#################################

- name: Configure Hashicorp key
  become: yes
  apt_key: url="https://apt.releases.hashicorp.com/gpg" state=present

- name: Configure Hashicorp repository
  become: yes
  apt_repository: repo="deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main" state=present

- name: Install Terraform
  become: yes
  apt:
    name: terraform
    update_cache: yes

#################################
########Docker installation######
#################################

- name: Configure Dockerâ€™s official GPG key
  become: yes
  apt_key: url="https://download.docker.com/linux/ubuntu/gpg" state=present

- name: Configure docker repository
  become: yes
  apt_repository: 
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install docker engine
  become: yes
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: present

- name: Install docker compose
  become: yes
  get_url:
    url: https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: +x

- name: add user "{{ ansible_user }}" to docker group
  become: yes
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  ignore_errors: yes

#################################
#Minikube & kubectl installation#
#################################

- name: Install kubectl
  become: yes
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin
    mode: +x

- name: Install minikube
  become: yes
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    mode: +x

- name: Install docker driver for kvm
  become: yes
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2
    dest: /usr/local/bin/docker-machine-driver-kvm2
    mode: +x

- name: Make kvm2 the default driver for minikube
  become: yes
  shell: "minikube config set driver kvm2"
  
  #Power consumption
  #sudo powertop --calibrate --auto-tune --quiet
  #sudo tlp start
